AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Integration API sample Send event to EventBridge bus with API call

  '
Globals:
  Function:
    Timeout: 25
    MemorySize: 128
Parameters:
  Environment:
    Type: String
    Default: dev
    Description: 'Support for several environment in parallel: dev, test, acc, prod.'
  Source:
    Type: String
    Default: woodwing.image.processing
    Description: 'The initiator for the processing. Example: woodwing.image.processing'
  Action:
    Type: String
    Default: channel-processing
    Description: 'The action thet will be performed. Example: channel-processing'
Mappings:
  EnvironmentMappings:
    dev:
      stage: Dev
    test:
      stage: Test
    prod:
      stage: Prod
Resources:
  ConfigurationDetailsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: configuration-id
        AttributeType: S
      KeySchema:
      - AttributeName: configuration-id
        KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
  ObjectOverviewTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: object-id
        AttributeType: S
      KeySchema:
      - AttributeName: object-id
        KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
  INS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Sub:
        - ${ENV}-in-object-processing
        - ENV:
            Ref: Environment
  OUTS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Sub:
        - ${ENV}-out-object-processing
        - ENV:
            Ref: Environment
      NotificationConfiguration:
        EventBridgeConfiguration:
          EventBridgeEnabled: true
  EventBus:
    Type: AWS::Events::EventBus
    Properties:
      Name:
        Fn::Sub:
        - ${ENV}-enterprise-service-bus
        - ENV:
            Ref: Environment
  InitiateObjectProcessingApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Dev
      Auth:
        ApiKeyRequired: true
        UsagePlan:
          CreateUsagePlan: PER_API
          UsagePlanName:
            Fn::Sub:
            - ${ENV}ApiPlan
            - ENV:
                Ref: Environment
  FailedProcessingSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: FailedObjectsDetails
  InitiateObjectProcessingFunc:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: InitiateObjectProcessingFunc
      Handler: initiate_processing.handler
      Runtime: nodejs18.x
      Architectures:
      - arm64
      Events:
        InitiateObjectProcessingFuncAPI:
          Type: Api
          Properties:
            RestApiId:
              Ref: InitiateObjectProcessingApi
            Path: /
            Method: post
            Auth:
              ApiKeyRequired: true
      Environment:
        Variables:
          ENVIRONMENT:
            Ref: Environment
          EVENTBRIDGE_BUS:
            Fn::GetAtt:
            - EventBus
            - Arn
          CONFIGURATION_TABLE_NAME:
            Ref: ConfigurationDetailsTable
          TOPIC_ARN:
            Ref: FailedProcessingSNSTopic
      Policies:
        Statement:
        - Effect: Allow
          Action: events:PutEvents
          Resource:
            Fn::GetAtt:
            - EventBus
            - Arn
        - Effect: Allow
          Action:
          - dynamodb:GetItem
          Resource:
          - Fn::GetAtt:
            - ConfigurationDetailsTable
            - Arn
        - Effect: Allow
          Action: sns:Publish
          Resource:
            Ref: FailedProcessingSNSTopic
    Metadata:
      SamResourceId: InitiateObjectProcessingFunc
  DownloadObjectToS3Func:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: DownloadObjectToS3Func
      Handler: download_object_to_s3.handler
      Runtime: nodejs18.x
      Architectures:
      - arm64
      Environment:
        Variables:
          ENVIRONMENT:
            Ref: Environment
          IN_BUCKET:
            Ref: INS3Bucket
          TOPIC_ARN:
            Ref: FailedProcessingSNSTopic
      Policies:
        Statement:
        - Effect: Allow
          Action:
          - s3:Put*
          Resource:
            Fn::Sub:
            - ${BUCKET}/*
            - BUCKET:
                Fn::GetAtt:
                - INS3Bucket
                - Arn
    Metadata:
      SamResourceId: DownloadObjectToS3Func
  CreateEventFunc:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: CreateEventFunc
      Handler: create_event.handler
      Runtime: nodejs18.x
      Architectures:
      - arm64
      Environment:
        Variables:
          ENVIRONMENT:
            Ref: Environment
          EVENTBRIDGE_BUS:
            Fn::GetAtt:
            - EventBus
            - Arn
          TOPIC_ARN:
            Ref: FailedProcessingSNSTopic
      Policies:
        Statement:
        - Effect: Allow
          Action: events:PutEvents
          Resource:
            Fn::GetAtt:
            - EventBus
            - Arn
    Metadata:
      SamResourceId: CreateEventFunc
  UploadObjectStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      DefinitionUri: ../../state-machine/upload-object-state-machine.asl.yaml
      DefinitionSubstitutions:
        DownloadObjectToS3FuncArn:
          Fn::GetAtt:
          - DownloadObjectToS3Func
          - Arn
        CreateEventFuncArn:
          Fn::GetAtt:
          - CreateEventFunc
          - Arn
      Policies:
      - LambdaInvokePolicy:
          FunctionName:
            Ref: DownloadObjectToS3Func
      - LambdaInvokePolicy:
          FunctionName:
            Ref: CreateEventFunc
  StateMachineRole:
    Type: AWS::IAM::Role
    Properties:
      Policies:
      - PolicyName: InvokeStateMachineRolePolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: states:StartExecution
            Resource:
              Fn::GetAtt:
              - UploadObjectStateMachine
              - Arn
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - events.amazonaws.com
          Action:
          - sts:AssumeRole
  InitiateProcessingEventRule:
    Type: AWS::Events::Rule
    Properties:
      Description: initiate-object-processing
      EventBusName:
        Fn::Sub:
        - ${ENV}-enterprise-service-bus
        - ENV:
            Ref: Environment
      EventPattern:
        source:
        - Ref: Source
        detail-type:
        - Ref: Action
      State: ENABLED
      Targets:
      - Id: StateMachineId
        Arn:
          Fn::GetAtt:
          - UploadObjectStateMachine
          - Arn
        RoleArn:
          Fn::GetAtt:
          - StateMachineRole
          - Arn
  ObjectStatusManagementFunc:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ObjectStatusManagementFunc
      Handler: object_status_mng.handler
      Runtime: nodejs18.x
      Architectures:
      - arm64
      Environment:
        Variables:
          ENVIRONMENT:
            Ref: Environment
          OBJECT_TABLE_NAME:
            Ref: ObjectOverviewTable
          TOPIC_ARN:
            Ref: FailedProcessingSNSTopic
      Policies:
        Statement:
        - Effect: Allow
          Action:
          - dynamodb:PutItem
          Resource:
          - Fn::GetAtt:
            - ObjectOverviewTable
            - Arn
    Metadata:
      SamResourceId: ObjectStatusManagementFunc
  ProcessingStatusEventRule:
    Type: AWS::Events::Rule
    Properties:
      Description: processing-status
      EventBusName:
        Fn::Sub:
        - ${ENV}-enterprise-service-bus
        - ENV:
            Ref: Environment
      EventPattern:
        source:
        - pixometry.image.processing
        detail-type:
        - update-object-status
      State: ENABLED
      Targets:
      - Id: LambdaFunctionForStatusUpdate
        Arn:
          Fn::GetAtt:
          - ObjectStatusManagementFunc
          - Arn
      - Id: LambdaFunctionForPixometryCall
        Arn:
          Fn::GetAtt:
          - PixometryCallFunc
          - Arn
  WoodwingProcessingStatusEventRule:
    Type: AWS::Events::Rule
    Properties:
      Description: processing-status
      EventBusName:
        Fn::Sub:
        - ${ENV}-enterprise-service-bus
        - ENV:
            Ref: Environment
      EventPattern:
        source:
        - woodwing.image.upload
        detail-type:
        - update-object-status
      State: ENABLED
      Targets:
      - Id: LambdaFunctionForStatusUpdate
        Arn:
          Fn::GetAtt:
          - ObjectStatusManagementFunc
          - Arn
  PermissionForEventsToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: ObjectStatusManagementFunc
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
        - WoodwingProcessingStatusEventRule
        - Arn
  FailedProcessingEventRule:
    Type: AWS::Events::Rule
    Properties:
      Description: failed-processing-status
      EventBusName:
        Fn::Sub:
        - ${ENV}-enterprise-service-bus
        - ENV:
            Ref: Environment
      EventPattern:
        source:
        - pixometry.image.processing
        - woodwing.image.upload
        detail-type:
        - update-object-status
        detail:
          status:
          - failed
      State: ENABLED
      Targets:
      - Id: SNSTopic
        Arn:
          Ref: FailedProcessingSNSTopic
  PermissionForEventsToInvokeSNS:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Statement:
        - Sid: AllowServices
          Effect: Allow
          Principal:
            Service:
            - events.amazonaws.com
          Action: sns:Publish
          Resource:
          - Ref: FailedProcessingSNSTopic
      Topics:
      - Ref: FailedProcessingSNSTopic
  PixometryCallFunc:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: PixometryCallFunc
      Handler: pixometry_call.handler
      Runtime: nodejs18.x
      Architectures:
      - arm64
      Environment:
        Variables:
          ENVIRONMENT:
            Ref: Environment
          OUT_BUCKET:
            Ref: OUTS3Bucket
          TOPIC_ARN:
            Ref: FailedProcessingSNSTopic
      Policies:
        Statement:
        - Effect: Allow
          Action:
          - s3:Put*
          Resource:
            Fn::Sub:
            - ${BUCKET}/*
            - BUCKET:
                Fn::GetAtt:
                - OUTS3Bucket
                - Arn
    Metadata:
      SamResourceId: PixometryCallFunc
  PermissionForEventsToInvokeLambdaPix:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: PixometryCallFunc
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
        - ProcessingStatusEventRule
        - Arn
  UploadToWoodwingFunc:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: UploadToWoodwingFunc
      Handler: upload_object_to_woodwing.handler
      Runtime: nodejs18.x
      Architectures:
      - arm64
      Environment:
        Variables:
          ENVIRONMENT:
            Ref: Environment
          OUT_BUCKET:
            Ref: OUTS3Bucket
          EVENTBRIDGE_BUS:
            Fn::GetAtt:
            - EventBus
            - Arn
          OBJECT_OVERVIEW_TABLE_NAME:
            Ref: ObjectOverviewTable
          TOPIC_ARN:
            Ref: FailedProcessingSNSTopic
      Policies:
        Statement:
        - Effect: Allow
          Action: events:PutEvents
          Resource:
            Fn::GetAtt:
            - EventBus
            - Arn
        - Effect: Allow
          Action: sqs:*
          Resource: '*'
        - Effect: Allow
          Action:
          - s3:Get*
          Resource:
            Fn::Sub:
            - ${BUCKET}/*
            - BUCKET:
                Fn::GetAtt:
                - OUTS3Bucket
                - Arn
        - Effect: Allow
          Action:
          - dynamodb:GetItem
          - dynamodb:PutItem
          Resource:
          - Fn::GetAtt:
            - ObjectOverviewTable
            - Arn
    Metadata:
      SamResourceId: UploadToWoodwingFunc
  UploadToWoodwingStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      DefinitionUri: ../../state-machine/upload-to-woodwing-state-machine.asl.yaml
      DefinitionSubstitutions:
        UploadToWoodwingFuncArn:
          Fn::GetAtt:
          - UploadToWoodwingFunc
          - Arn
        CreateEventFuncArn:
          Fn::GetAtt:
          - CreateEventFunc
          - Arn
      Policies:
      - LambdaInvokePolicy:
          FunctionName:
            Ref: UploadToWoodwingFunc
      - LambdaInvokePolicy:
          FunctionName:
            Ref: CreateEventFunc
  WoodwingStateMachineRole:
    Type: AWS::IAM::Role
    Properties:
      Policies:
      - PolicyName: InvokeWoodwingStateMachineRolePolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: states:StartExecution
            Resource:
              Fn::GetAtt:
              - UploadToWoodwingStateMachine
              - Arn
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - events.amazonaws.com
          Action:
          - sts:AssumeRole
  InitiateWoodwingUploadingEventRule:
    Type: AWS::Events::Rule
    Properties:
      Description: initiate-object-uploading
      EventPattern:
        source:
        - aws.s3
        detail-type:
        - Object Created
        detail:
          bucket:
            name:
            - Ref: OUTS3Bucket
      State: ENABLED
      Targets:
      - Id: WoodwingStateMachineId
        Arn:
          Fn::GetAtt:
          - UploadToWoodwingStateMachine
          - Arn
        RoleArn:
          Fn::GetAtt:
          - WoodwingStateMachineRole
          - Arn
Outputs:
  InitiateObjectProcessingApiEndpoint:
    Description: API Gateway endpoint URL for initializing the process
    Value:
      Fn::Sub:
      - https://${APIID}.execute-api.${AWS::Region}.amazonaws.com/${ENV}/
      - APIID:
          Ref: InitiateObjectProcessingApi
        ENV:
          Fn::FindInMap:
          - EnvironmentMappings
          - Ref: Environment
          - stage
