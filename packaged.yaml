AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Integration API sample

  Send event to EventBridge bus with API call

  '
Globals:
  Function:
    Timeout: 25
    MemorySize: 128
Parameters:
  Environment:
    Type: String
    Default: prod
    Description: 'Support for several environment in parallel: dev, test, acc, prod.'
Resources:
  EventBus:
    Type: AWS::Events::EventBus
    Properties:
      Name: enterpise-service-bus
    Metadata:
      SamResourceId: EventBus
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: EventBridgeBusPutEvent
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: events:PutEvents
            Resource:
              Fn::GetAtt:
              - EventBus
              - Arn
          - Effect: Allow
            Action: logs:CreateLogGroup
            Resource:
              Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*
          - Effect: Allow
            Action:
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource:
              Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/EventBridgeBusPutEventFunc:*
    Metadata:
      SamResourceId: LambdaRole
  EventBridgeBusPutEventApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Dev
      Auth:
        ApiKeyRequired: true
        UsagePlan:
          CreateUsagePlan: PER_API
          UsagePlanName: EventBridgeBusPutEventPlan
    Metadata:
      SamResourceId: EventBridgeBusPutEventApi
  EventBridgeBusPutEventFunc:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: EventBridgeBusPutEventFunc
      Role:
        Fn::GetAtt:
        - LambdaRole
        - Arn
      CodeUri: s3://samtestpackage123/42006752eee6191204304012d52bda75
      Handler: put_event.handler
      Runtime: nodejs18.x
      Architectures:
      - arm64
      Events:
        EventBridgeBusPutEventFuncAPI:
          Type: Api
          Properties:
            RestApiId:
              Ref: EventBridgeBusPutEventApi
            Path: /
            Method: post
            Auth:
              ApiKeyRequired: true
      Environment:
        Variables:
          ENVIRONMENT:
            Ref: Environment
          EVENTBRIDGE_BUS:
            Fn::GetAtt:
            - EventBus
            - Arn
    Metadata:
      SamResourceId: EventBridgeBusPutEventFunc
  LambdaRole1:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: TriggerFunctionOnEvent
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: logs:CreateLogGroup
            Resource:
              Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*
          - Effect: Allow
            Action:
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource:
              Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/TriggeredByEventFunc:*
    Metadata:
      SamResourceId: LambdaRole1
  TriggeredByEventFunc:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: TriggeredByEventFunc
      Role:
        Fn::GetAtt:
        - LambdaRole1
        - Arn
      CodeUri: s3://samtestpackage123/42006752eee6191204304012d52bda75
      Handler: triggered_by_event.handler
      Runtime: nodejs18.x
      Architectures:
      - arm64
    Metadata:
      SamResourceId: TriggeredByEventFunc
  EventRule0:
    Type: AWS::Events::Rule
    Properties:
      Description: process-application-A-events
      EventBusName: enterpise-service-bus
      EventPattern:
        source:
        - woodwing.image.processing
        detail-type:
        - channel-processing
      Name: process-application-A-events
      State: ENABLED
      Targets:
      - Id: Id32f72173-7a5d-4dc6-8059-c5443a0c1365
        Arn:
          Fn::GetAtt:
          - TriggeredByEventFunc
          - Arn
    Metadata:
      SamResourceId: EventRule0
  PermissionForEvent0ToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: TriggeredByEventFunc
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
        - EventRule0
        - Arn
    Metadata:
      SamResourceId: PermissionForEvent0ToInvokeLambda
Outputs:
  EventBridgeBusPutEventApiDev:
    Description: API Gateway endpoint URL for Dev stage for TemplateScannerWrapper
      function
    Value:
      Fn::Sub:
      - https://${APIID}.execute-api.${AWS::Region}.amazonaws.com/Dev/
      - APIID:
          Ref: EventBridgeBusPutEventApi
